{{- $nginxName := (include "nginx-sandbox.nginxStatefulSetName" .) -}}
{{- $nginxServiceName := (include "nginx-sandbox.nginxServiceName" .) -}}
{{- $nginxPort := .Values.nginx.portNumber -}}
{{- $httpbinServiceName := (include "nginx-sandbox.httpbinServiceName" .) -}}
{{- $httpbinPort := .Values.httpbin.portNumber -}}
{{- $appServiceName := (include "nginx-sandbox.appServiceName" .) -}}
{{- $appPort := .Values.app.portNumber  -}}
{{- $serviceSuffix := (include "nginx-sandbox.serviceSuffix" .) -}}
{{- $resolver := (include "nginx-sandbox.resolverFQDN" .) -}}
{{- $namespace := .Release.Namespace -}}
server {
  listen {{ $nginxPort }};
  server_name _;
  # resolve names for Services, Pods
  resolver {{ $resolver }} valid=5s;

  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-For $remote_addr;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Forwarded "for=${remote_addr};proto=${scheme};host=${host}";

  # for probes
  location = /health {
    access_log off;
    return 200;
  }

  location = /nginx_status {
    access_log off;
    stub_status;
    server_tokens on;
  }

  #error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }

  # pass request from nginx to nginx
  # e.g. /n1/some/path -> nginx-1/some/path
  {{- range $i, $__e := until (.Values.replicaCount | int) }}
  location ~ /n{{ $i }}/(.*) {
    set $nginx{{ $i }}_upstream {{ printf "%s-%d.%s.%s.%s" $nginxName $i $nginxServiceName $namespace $serviceSuffix }};
    proxy_pass http://$nginx{{ $i }}_upstream:{{ $nginxPort }}/$1$is_args$args;
  }
  {{- end }}

  # pass request from nginx to httpbin
  location ~ /b/(.*) {
    set $httpbin_upstream {{ printf "%s.%s.%s" $httpbinServiceName $namespace $serviceSuffix }};
    proxy_pass http://$httpbin_upstream:{{ $httpbinPort }}/$1$is_args$args;
  }

  # pass request from nginx to app
  location ~ /a/(.*) {
    set $app_upstream {{ printf "%s.%s.%s" $appServiceName $namespace $serviceSuffix }};
    proxy_pass http://$app_upstream:{{ $appPort }}/$1$is_args$args;
  }

  {{/*
  additional server configurations
  */}}
  {{- with .Values.nginx.conf.server }}
  {{- . | nindent 2 -}}
  {{- end }}
}